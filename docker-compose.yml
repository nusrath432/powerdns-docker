networks:
  pdns:
    driver: bridge
    name: pdns

x-common_env: &common_env
  TZ: Asia/Riyadh

x-common_healthcheck: &common_healthcheck
  interval: 10s
  retries: 3
  start_period: 30s
  timeout: 5s

x-common_networks: &common_networks
  - pdns

x-service-stop: &service-stop-defaults
  init: true
  stop_grace_period: 15s
  stop_signal: SIGTERM

x-security: &security-defaults
  security_opt:
    - no-new-privileges:true
  cap_drop:
    - ALL
  cap_add:
    - NET_BIND_SERVICE

services:
  lightningstream:
    container_name: lightningstream
    hostname: lightningstream
    <<: [*service-stop-defaults, *security-defaults]

    image: ${LIGHTNINGSTREAM_IMAGE}

    user: "953:953"
    restart: unless-stopped

    cpus: ${LIGHTNINGSTREAM_CPUS}
    mem_limit: ${LIGHTNINGSTREAM_MEM}

    labels:
      - "com.powerdns.stack=true"
      - "com.powerdns.service=lightningstream"
      - "service.name=lightningstream"
      - "service.type=sync"

    env_file:
      - .env
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ./data/lmdb:/var/lib/powerdns:rw
      - ./services/lightningstream/lightningstream.yml:/etc/lightningstream.yaml:ro

    command:
      - receive
      - -c
      - /etc/lightningstream.yaml
      - --instance=${LIGHTNINGSTREAM_INSTANCE}
      - --log-level=${LIGHTNINGSTREAM_LOG_LEVEL}
      - --log-format=${LIGHTNINGSTREAM_LOG_FORMAT}
      - --timeout=${LIGHTNINGSTREAM_TIMEOUT}

    depends_on:
      - minio
      - powerdns-auth

    ports:
      - "${LIGHTNINGSTREAM_HTTP_PORT}:8080"

    networks: *common_networks


    healthcheck:
      test: ["CMD-SHELL", "test -f /proc/1/cmdline && grep -q lightningstream /proc/1/cmdline || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s

  minio:
    container_name: minio
    hostname: minio
    <<: [*service-stop-defaults, *security-defaults]

    image: ${MINIO_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${MINIO_CPUS}
    mem_limit: ${MINIO_MEM}

    labels:
      - "com.powerdns.stack=true"
      - "com.powerdns.service=minio"
      - "service.name=minio"
      - "service.type=storage"
      - "maintainer=nusrath432"

    env_file:
      - .env
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ./data/minio:/data:rw

    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"

    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"

    networks: *common_networks

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

  minio-client:
    container_name: minio-client
    hostname: minio-client
    <<: [*service-stop-defaults, *security-defaults]

    image: ${MINIO_CLIENT_IMAGE}

    user: "root:root"
    restart: "no"

    cpus: ${MINIO_CLIENT_CPUS}
    mem_limit: ${MINIO_CLIENT_MEM}

    labels:
      - "com.powerdns.stack=true"
      - "com.powerdns.service=minio-client"
      - "service.name=minio-client"
      - "service.type=init"
      - "maintainer=nusrath432"

    env_file:
      - .env
      - .env.secrets
    environment:
      <<: *common_env

    entrypoint:
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:${MINIO_API_PORT} \"$${MINIO_ROOT_USER}\" \"$${MINIO_ROOT_PASSWORD}\";
      /usr/bin/mc mb minio/${MINIO_BUCKET_NAME} --ignore-existing;
      exit 0;
      "

    depends_on:
      minio:
        condition: service_healthy

    networks: *common_networks

    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      <<: *common_healthcheck

  powerdns-admin:
    container_name: pdns-admin
    hostname: pdns-admin
    <<: [*service-stop-defaults, *security-defaults]

    image: ${POWERDNS_ADMIN_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${PDA_CPUS}
    mem_limit: ${PDA_MEM}

    labels:
      - "com.powerdns.stack=true"
      - "com.powerdns.service=admin"
      - "service.name=powerdns-admin"
      - "service.type=web"
      - "maintainer=nusrath432"

    env_file:
      - .env
      - .env.secrets
    environment:
      <<: *common_env
      SECRET_KEY:
      SQLALCHEMY_DATABASE_URI: "${PDA_DATABASE_URI}"
      GUNICORN_TIMEOUT: "${PDA_GUNICORN_TIMEOUT}"
      GUNICORN_WORKERS: "${PDA_GUNICORN_WORKERS}"
      GUNICORN_LOGLEVEL: "${PDA_GUNICORN_LOGLEVEL}"

    volumes:
      - ./data/pda:/data:rw

    ports:
      - "${PDA_WEB_PORT}:80"

    depends_on:
      - powerdns-auth

    networks: *common_networks

    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--timeout=5", "--spider", "http://127.0.0.1/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  powerdns-auth:
    container_name: pdns-auth
    hostname: pdns-auth
    <<: [*service-stop-defaults]

    image: ${POWERDNS_AUTH_IMAGE}

    restart: unless-stopped

    cpus: ${POWERDNS_AUTH_CPUS}
    mem_limit: ${POWERDNS_AUTH_MEM}

    entrypoint: ["/usr/local/sbin/pdns_server"]
    command: ["--daemon=no", "--guardian=no"]

    env_file:
      - .env
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ./data/lmdb:/var/lib/powerdns:rw
      - ./services/powerdns-auth/pdns.conf:/etc/powerdns/pdns.conf:ro

    ports:
      - "${DNS_PORT}:53/tcp"
      - "${DNS_PORT}:53/udp"
      - "${PDNS_API_PORT}:8081"

    depends_on:
      minio:
        condition: service_healthy

    networks: *common_networks

    healthcheck:
      test: ["CMD-SHELL", "sdig 127.0.0.1 53 . SOA > /dev/null 2>&1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s

  powerdns-recursor:
    container_name: pdns-recursor
    hostname: pdns-recursor
    image: ${POWERDNS_RECURSOR_IMAGE}

    restart: unless-stopped

    cpus: ${POWERDNS_RECURSOR_CPUS}
    mem_limit: ${POWERDNS_RECURSOR_MEM}

    env_file:
      - .env
      - .env.secrets

    volumes:
      - ./services/powerdns-recursor/recursor.conf:/etc/powerdns/recursor.conf:ro
      - ./services/powerdns-recursor/trust-anchors.conf:/etc/powerdns/trust-anchors.conf:ro
      - ./data/recursor:/var/lib/powerdns:rw

    ports:
      - "${PDNS_RECURSOR_DNS_PORT}:53/tcp"
      - "${PDNS_RECURSOR_DNS_PORT}:53/udp"
      - "${PDNS_RECURSOR_WEB_PORT}:8082"

    networks: *common_networks

    healthcheck:
      test: ["CMD-SHELL", "rec_control ping || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s
