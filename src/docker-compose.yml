networks:
  pdns:
    driver: bridge
    name: pdns

x-common_env: &common_env
  TZ: Asia/Riyadh

x-common_healthcheck: &common_healthcheck
  interval: 10s
  retries: 3
  start_period: 30s
  timeout: 5s

x-common_networks: &common_networks
  - pdns

x-service-stop: &service-stop-defaults
  init: true
  stop_grace_period: 15s
  stop_signal: SIGTERM

services:
  lightningstream:
    container_name: lightningstream
    hostname: lightningstream
    <<: *service-stop-defaults

    image: ${LIGHTNINGSTREAM_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${LIGHTNINGSTREAM_CPUS}
    mem_limit: ${LIGHTNINGSTREAM_MEM}

    env_file:
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ../data/lmdb:/var/lib/powerdns:rw
      - ./services/lightningstream/lightningstream.yml:/etc/lightningstream.yaml:ro

    command:
      - sync
      - -c
      - /etc/lightningstream.yaml
      - --instance=powerdns-1
      - --timeout=60s
      - --log-level=info
      - --log-format=json

    depends_on:
      - minio
      - powerdns

    networks: *common_networks

    ports:
      - "8080:8080"

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      <<: *common_healthcheck

  minio:
    container_name: minio
    hostname: minio
    <<: *service-stop-defaults

    image: ${MINIO_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${MINIO_CPUS}
    mem_limit: ${MINIO_MEM}

    env_file:
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ../data/minio:/data:rw

    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"

    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"

    networks: *common_networks

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      <<: *common_healthcheck

  minio-client:
    container_name: minio-client
    hostname: minio-client
    <<: *service-stop-defaults

    image: ${MINIO_CLIENT_IMAGE}

    user: "root:root"
    restart: "no"

    cpus: ${MINIO_CLIENT_CPUS}
    mem_limit: ${MINIO_CLIENT_MEM}

    env_file:
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ./services/scripts:/scripts:ro

    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:${MINIO_API_PORT} $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/powerdns-sync --ignore-existing;
      exit 0;
      "

    depends_on:
      minio:
        condition: service_healthy

    networks: *common_networks

    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      <<: *common_healthcheck

  powerdns:
    container_name: pdns-auth
    hostname: pdns-auth
    <<: *service-stop-defaults

    image: ${POWERDNS_AUTH_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${POWERDNS_AUTH_CPUS}
    mem_limit: ${POWERDNS_AUTH_MEM}

    env_file:
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ../data/lmdb:/var/lib/powerdns:rw
      - ./services/powerdns/pdns.conf:/etc/powerdns/pdns.conf:ro

    ports:
      - "${DNS_PORT}:53/tcp"
      - "${DNS_PORT}:53/udp"
      - "${PDNS_API_PORT}:8081"

    depends_on:
      minio:
        condition: service_healthy

    networks: *common_networks

    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      <<: *common_healthcheck

  powerdns-admin:
    container_name: pdns-admin
    hostname: pdns-admin
    <<: *service-stop-defaults

    image: ${POWERDNS_ADMIN_IMAGE}

    user: "root:root"
    restart: unless-stopped

    cpus: ${PDA_CPUS}
    mem_limit: ${PDA_MEM}

    env_file:
      - .env.secrets
    environment:
      <<: *common_env

    volumes:
      - ../data/pda:/data:rw

    ports:
      - "${PDA_WEB_PORT}:80"

    depends_on:
      - powerdns

    networks: *common_networks

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      <<: *common_healthcheck
